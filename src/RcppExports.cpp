// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// Huber_loss
arma::mat Huber_loss(arma::mat Vi, arma::mat Vj, float Z, float CT);
RcppExport SEXP _FarmTest_Huber_loss(SEXP ViSEXP, SEXP VjSEXP, SEXP ZSEXP, SEXP CTSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Vi(ViSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Vj(VjSEXP);
    Rcpp::traits::input_parameter< float >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< float >::type CT(CTSEXP);
    rcpp_result_gen = Rcpp::wrap(Huber_loss(Vi, Vj, Z, CT));
    return rcpp_result_gen;
END_RCPP
}
// Huber_gradient
arma::mat Huber_gradient(arma::mat Vi, arma::mat Vj, float Z, float CT);
RcppExport SEXP _FarmTest_Huber_gradient(SEXP ViSEXP, SEXP VjSEXP, SEXP ZSEXP, SEXP CTSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Vi(ViSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Vj(VjSEXP);
    Rcpp::traits::input_parameter< float >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< float >::type CT(CTSEXP);
    rcpp_result_gen = Rcpp::wrap(Huber_gradient(Vi, Vj, Z, CT));
    return rcpp_result_gen;
END_RCPP
}
// Huber_descent
float Huber_descent(arma::mat Vi, arma::mat Vj, float Z, float CT);
RcppExport SEXP _FarmTest_Huber_descent(SEXP ViSEXP, SEXP VjSEXP, SEXP ZSEXP, SEXP CTSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Vi(ViSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Vj(VjSEXP);
    Rcpp::traits::input_parameter< float >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< float >::type CT(CTSEXP);
    rcpp_result_gen = Rcpp::wrap(Huber_descent(Vi, Vj, Z, CT));
    return rcpp_result_gen;
END_RCPP
}
// Robust_CV
float Robust_CV(arma::mat Vi, arma::mat Vj);
RcppExport SEXP _FarmTest_Robust_CV(SEXP ViSEXP, SEXP VjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Vi(ViSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Vj(VjSEXP);
    rcpp_result_gen = Rcpp::wrap(Robust_CV(Vi, Vj));
    return rcpp_result_gen;
END_RCPP
}
// Huber_loss_F
arma::mat Huber_loss_F(arma::mat X, arma::mat phi, arma::mat B, float CT, int T);
RcppExport SEXP _FarmTest_Huber_loss_F(SEXP XSEXP, SEXP phiSEXP, SEXP BSEXP, SEXP CTSEXP, SEXP TSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    Rcpp::traits::input_parameter< float >::type CT(CTSEXP);
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    rcpp_result_gen = Rcpp::wrap(Huber_loss_F(X, phi, B, CT, T));
    return rcpp_result_gen;
END_RCPP
}
// Huber_gradient_F
arma::mat Huber_gradient_F(arma::mat X, arma::mat phi, arma::mat B, float CT, int T);
RcppExport SEXP _FarmTest_Huber_gradient_F(SEXP XSEXP, SEXP phiSEXP, SEXP BSEXP, SEXP CTSEXP, SEXP TSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    Rcpp::traits::input_parameter< float >::type CT(CTSEXP);
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    rcpp_result_gen = Rcpp::wrap(Huber_gradient_F(X, phi, B, CT, T));
    return rcpp_result_gen;
END_RCPP
}
// Huber_descent_F
arma::mat Huber_descent_F(arma::mat X, arma::mat phi, arma::mat B, float CT);
RcppExport SEXP _FarmTest_Huber_descent_F(SEXP XSEXP, SEXP phiSEXP, SEXP BSEXP, SEXP CTSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    Rcpp::traits::input_parameter< float >::type CT(CTSEXP);
    rcpp_result_gen = Rcpp::wrap(Huber_descent_F(X, phi, B, CT));
    return rcpp_result_gen;
END_RCPP
}
// Robust_CV_F
float Robust_CV_F(arma::mat vx, arma::mat phi);
RcppExport SEXP _FarmTest_Robust_CV_F(SEXP vxSEXP, SEXP phiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type vx(vxSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type phi(phiSEXP);
    rcpp_result_gen = Rcpp::wrap(Robust_CV_F(vx, phi));
    return rcpp_result_gen;
END_RCPP
}
// Influence_Huber
arma::mat Influence_Huber(arma::mat X, float tau);
RcppExport SEXP _FarmTest_Influence_Huber(SEXP XSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< float >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(Influence_Huber(X, tau));
    return rcpp_result_gen;
END_RCPP
}
// mu_robust
arma::mat mu_robust(float C_tau, arma::mat X);
RcppExport SEXP _FarmTest_mu_robust(SEXP C_tauSEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< float >::type C_tau(C_tauSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(mu_robust(C_tau, X));
    return rcpp_result_gen;
END_RCPP
}
// mu_robust_F
arma::mat mu_robust_F(float C_tau, arma::mat X, arma::mat phi);
RcppExport SEXP _FarmTest_mu_robust_F(SEXP C_tauSEXP, SEXP XSEXP, SEXP phiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< float >::type C_tau(C_tauSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type phi(phiSEXP);
    rcpp_result_gen = Rcpp::wrap(mu_robust_F(C_tau, X, phi));
    return rcpp_result_gen;
END_RCPP
}
// Cov_Huber
arma::mat Cov_Huber(float C_tau, arma::mat X, arma::mat mu_hat);
RcppExport SEXP _FarmTest_Cov_Huber(SEXP C_tauSEXP, SEXP XSEXP, SEXP mu_hatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< float >::type C_tau(C_tauSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu_hat(mu_hatSEXP);
    rcpp_result_gen = Rcpp::wrap(Cov_Huber(C_tau, X, mu_hat));
    return rcpp_result_gen;
END_RCPP
}
// Cov_U
arma::mat Cov_U(float C_tau, arma::mat X);
RcppExport SEXP _FarmTest_Cov_U(SEXP C_tauSEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< float >::type C_tau(C_tauSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(Cov_U(C_tau, X));
    return rcpp_result_gen;
END_RCPP
}
// Eigen_Decomp
arma::mat Eigen_Decomp(arma::mat M);
RcppExport SEXP _FarmTest_Eigen_Decomp(SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(Eigen_Decomp(M));
    return rcpp_result_gen;
END_RCPP
}
// Loading_Sample
arma::mat Loading_Sample(int K, arma::mat M);
RcppExport SEXP _FarmTest_Loading_Sample(SEXP KSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(Loading_Sample(K, M));
    return rcpp_result_gen;
END_RCPP
}
// Loading_Robust
arma::mat Loading_Robust(int K, arma::mat M);
RcppExport SEXP _FarmTest_Loading_Robust(SEXP KSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(Loading_Robust(K, M));
    return rcpp_result_gen;
END_RCPP
}
// FDP_Oracle
float FDP_Oracle(int P, int N, float sigma_e_true, arma::mat mu_hat, arma::mat Lambda, arma::mat F, float t, float l, int P_null);
RcppExport SEXP _FarmTest_FDP_Oracle(SEXP PSEXP, SEXP NSEXP, SEXP sigma_e_trueSEXP, SEXP mu_hatSEXP, SEXP LambdaSEXP, SEXP FSEXP, SEXP tSEXP, SEXP lSEXP, SEXP P_nullSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type P(PSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< float >::type sigma_e_true(sigma_e_trueSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu_hat(mu_hatSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Lambda(LambdaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type F(FSEXP);
    Rcpp::traits::input_parameter< float >::type t(tSEXP);
    Rcpp::traits::input_parameter< float >::type l(lSEXP);
    Rcpp::traits::input_parameter< int >::type P_null(P_nullSEXP);
    rcpp_result_gen = Rcpp::wrap(FDP_Oracle(P, N, sigma_e_true, mu_hat, Lambda, F, t, l, P_null));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_FarmTest_Huber_loss", (DL_FUNC) &_FarmTest_Huber_loss, 4},
    {"_FarmTest_Huber_gradient", (DL_FUNC) &_FarmTest_Huber_gradient, 4},
    {"_FarmTest_Huber_descent", (DL_FUNC) &_FarmTest_Huber_descent, 4},
    {"_FarmTest_Robust_CV", (DL_FUNC) &_FarmTest_Robust_CV, 2},
    {"_FarmTest_Huber_loss_F", (DL_FUNC) &_FarmTest_Huber_loss_F, 5},
    {"_FarmTest_Huber_gradient_F", (DL_FUNC) &_FarmTest_Huber_gradient_F, 5},
    {"_FarmTest_Huber_descent_F", (DL_FUNC) &_FarmTest_Huber_descent_F, 4},
    {"_FarmTest_Robust_CV_F", (DL_FUNC) &_FarmTest_Robust_CV_F, 2},
    {"_FarmTest_Influence_Huber", (DL_FUNC) &_FarmTest_Influence_Huber, 2},
    {"_FarmTest_mu_robust", (DL_FUNC) &_FarmTest_mu_robust, 2},
    {"_FarmTest_mu_robust_F", (DL_FUNC) &_FarmTest_mu_robust_F, 3},
    {"_FarmTest_Cov_Huber", (DL_FUNC) &_FarmTest_Cov_Huber, 3},
    {"_FarmTest_Cov_U", (DL_FUNC) &_FarmTest_Cov_U, 2},
    {"_FarmTest_Eigen_Decomp", (DL_FUNC) &_FarmTest_Eigen_Decomp, 1},
    {"_FarmTest_Loading_Sample", (DL_FUNC) &_FarmTest_Loading_Sample, 2},
    {"_FarmTest_Loading_Robust", (DL_FUNC) &_FarmTest_Loading_Robust, 2},
    {"_FarmTest_FDP_Oracle", (DL_FUNC) &_FarmTest_FDP_Oracle, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_FarmTest(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
